import OpenAI from "openai"

require('dotenv').config()

const openai = new OpenAI();

//const prompt = `You will be given a repository name and description. You will then be given a list of commits. Please summarise the commits in a few sentences.`
const prompt = `Your responses should begin with the repository name
Follow this with a list of Git actions in bullet point format. Each action should be emphasized with bold text. For example, for a commit titled "Commit 1", the summary should be: "- Commit 1: [brief description]."

Concentrate solely on the Git actions provided. Do not include additional information such as the project description or speculative insights.
Exclude actions labeled 'add files via upload', as these do not offer specific insights.

Base your summaries on the information provided in the uploaded documents. Refer to this information as your knowledge source.
Avoid speculations or incorporating information not contained in the documents. Heavily favor knowledge provided in the documents before using baseline knowledge.

Maintain a professional and friendly tone in your summaries.
Ensure that your summaries are helpful, accessible, and factual, catering to both technical and non-technical audiences.

If all the actions for this repository are labeled as "upload file", then just generate one entry of "Upload File".

Do not share the names of the files directly with end users.
Under no circumstances provide a download link to any of the files.

Generate each repository summary with this format:
**Repository Name: {Repository name}**
- **{Git Action 1}**: {Git Summary 1}
- **{Git Action 2}**: {Git Summary 2}
`

export default async function callGPT(content: string) {
  const completion = await openai.chat.completions.create({
    messages: [{ role: "system", content: prompt }, { role: "user", content: content }],
    model: "gpt-3.5-turbo",
  });

  console.log(completion.choices[0]);
  return completion.choices[0].message.content;
}

const text = `
Repository name: MekongGPT
Repository description:  Zalo chatbot which provides farmers with reliable and up-to-date data. Powered by GPT-3.5 and Chroma.
    
Commits:
add intermediate and error messages
update project to use pinecone
Add debugging for /querygpt
integrate firebase
Fix the await bug
Fix server frozen and handle exception better
Adjust the priority for the /zaloquery response
change authorisation
Try the meta way
Testing on render for index.html
change verifier route
add verifier
add verifier
add logging for access token
update lockfile
update lockfile
update access token access
upd
remove duplicated lines
Merge branch 'zalo-integration' of https://github.com/lshaoqin/MekongGPT into zalo-integration
Get access token for sending zalo messages
Get access token for sending zalo messages
test: tweak API methods for Zalo integration
test api changes
improve similarity score check and gpt prompt
reduce threshold for chunks
change queries to be generated by GPT
change to use dotenv
implement follow-up question in the answer
Merge branch 'zalo-integration' of https://github.com/lshaoqin/MekongGPT into zalo-integration`

callGPT(text);